{"top":0,"left":0,"width":1914,"height":2000,"_id":152,"_type":"Report","_items":{"5":{"top":112,"left":892,"_id":5,"_type":"Button","width":110.00000000000001,"height":40,"text":"Запросить\nпрогноз","background_color":"#bcbcbc","border_width":2,"z_index":2,"_events":{"click":{"type":"SCRIPT","value":{"tags":{"point":[{"filter":"point"}],"nodes":[{"source":"nodes"}],"node":[{"source":"config"}]},"script":"function({point,nodes,node},element,context){\r    \r    let i = point.get();\r    node = node.get()._value;\r    \r    let path = nodes.data()[i]._path;\r    \r    console.log(\"DEBUG:nodes-> \",nodes.data());\r    console.log(\"DEBUG:node.name-> \",node);\r    console.log(\"DEBUG:node.path-> \",path);\r    console.log(\"DEBUG:point index-> \",i);\r    \r    if(!node) { console.log(\"DEBUG:OYYYYY\"); return; }\r    \r    // console.log(\"DEBUG:context_click->\",context);\r    // console.log(\"DEBUG:node.path->\",node);\r    \r    context.read_tag(path,[\"trigger\"],({trigger})=>{\r        // console.log(\"trigger\",trigger);\r        if (typeof trigger!==\"number\") trigger=0;\r        trigger++;\r        console.log(\"trigger1\",trigger);\r        context.edit_tag(path,{trigger},null,fp_dev.error)\r    },fp_dev.error);\r    \r    \r    // console.log(\"DEBUG->_Узлы->VARS:\",VARS);\r    // console.log(\"DEBUG->_Узлы->point:\", pointInd, VARS.point, VARS.value, VARS);\r    // console.log(\"DEBUG->_Узлы->pointD:\", VARS.point._value._properties.options[pointInd]);\r    // let path = VARS.point._value._properties.options[pointInd] + \"/model_control\";\r    \r    // let trigger = VARS.value.get();\r     \r    // if (trigger == null)\r    //     {\r    //       trigger = 1; \r    //     }\r    // else {\r    //     trigger = trigger + 1;\r    // }\r    // console.log(trigger);\r\t//VARS.value.set(trigger);\r\t\r// \tcontext.setTimeout(()=>{\r// \t    context.run_report();\r// \t}, 30000);\r}"}}}},"48":{"top":815,"left":823,"_id":48,"_type":"LocalDatasource","_links":{"data":{"type":"SCRIPT","tags":{"DS":[{"source":"tsP"}]},"script":"function(VARS, element, context) {\r\n    let ds = VARS.DS.data();\r\n    //console.log(\"DEBUG:typeof ds:\",typeof ds);\r\n    //console.log(\"DEBUG:ds:\",ds);\r\n    //console.log(\"DEBUG:ds[0]:\",ds[0]);\r\n    \r\n    let arrayMean = function (arr) {\r\n        return arr.reduce((a, b) => a + b, 0) / arr.length;\r\n    };\r\n    \r\n    // Functions to find MeanSquareError\r\n    let MSE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.pow((v - predict[index]), 2);\r\n            });\r\n        return (valueArray.reduce((a, x) => (a + x), 0)) / valueArray.length;\r\n    };\r\n    \r\n    // Functions to find RootMeanSquareError\r\n    let RMSE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.pow((v - predict[index]), 2);\r\n            });\r\n        return Math.sqrt(valueArray.reduce((acc, value) => (acc + value), 0)) / valueArray.length;\r\n    };\r\n    \r\n    // Functions to find MeanAbsError\r\n    let MAE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.abs(v - predict[index]);\r\n            });\r\n        return ( valueArray.reduce((acc, value) => (acc + value)) / valueArray.length );\r\n    };\r\n\r\n    // Functions to find MeanAbsPersError\r\n    let MAPE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.abs(v - predict[index])/v;\r\n            });\r\n        return ( valueArray.reduce((acc, value) => (acc + value)) / valueArray.length * 100);\r\n    };      \r\n    \r\n    // Functions to find 100 - MAPE\r\n    let accuracy = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.abs(v - predict[index])/v;\r\n            });\r\n        return 100 - Math.abs( (valueArray.reduce((acc, value) => (acc + value)) / valueArray.length) * 100 );\r\n    };\r\n\r\n    // Functions to find std\r\n    let standDev = function (arr) {\r\n        let valueMean = arr.reduce((acc, b) => acc + b, 0) / arr.length;\r\n        return Math.sqrt(arr.reduce((acc, x) => (acc + Math.pow(x - valueMean, 2))) / arr.length);\r\n    };\r\n    \r\n    // Functions to find minV\r\n    let minValue = function (arr) {\r\n        return Math.min.apply(null, arr);\r\n    };\r\n    \r\n    let maxValue = function (arr) {\r\n        return Math.max.apply(null, arr);\r\n    };\r\n    \r\n\r\n\r\n    // Prepare array of parameter with numbers\r\n    let fact = ds.map((value) => {\r\n        //return value.p_load_fact_smooth;\r\n        return Math.round(value.FACT_P_L);\r\n    });\r\n    let predict = ds.map((value) => {\r\n        //return value.predict_p_load;\r\n        return Math.round(value.PRED_P_L);\r\n    });\r\n\r\n    let date = ds.map((value) => {\r\n        return value.date;\r\n    });\r\n\r\n    let value = {};\r\n    \r\n    value.predictMinValue = Math.round(minValue(predict));\r\n    value.predictMaxValue = Math.round(maxValue(predict));\r\n    \r\n    value.mse = Math.round(MSE(fact, predict));\r\n    value.rmse = Math.round(RMSE(fact, predict));\r\n    value.mae = Math.round(MAE(fact, predict));\r\n    value.mape = Math.round(MAPE(fact, predict));       // ошибка в процентах    \r\n    value.accuracy = Math.round(accuracy(fact, predict)); //точность в %\r\n\r\n    value.factMean = Math.round(arrayMean(fact));\r\n    value.predictMean = Math.round(arrayMean(predict));\r\n    // value.factStandDev = Math.round(standDev(fact));\r\n    value.predictStandDev = Math.round(standDev(predict));\r\n    //value.date = date[0];\r\n    \r\n    //console.log('DEBUG:calculationP:date ' + parseInt(date));\r\n    //console.log('DEBUG:calculationP:fact ' + fact);\r\n    //console.log('DEBUG:calculationP:predict ' + predict);\r\n    //console.log('DEBUG:calculationP:value.mape ' + value.mape);\r\n    \r\n  return [value];\r\n}"}},"name":"calculationP","width":85,"height":40,"z_index":2,"_events":{}},"59":{"top":724,"left":3,"_id":59,"_type":"Rectangle","width":1001,"border_width":3,"border_color":"#bcbcbc","border_style":"ridge","background_color":"#f4f4f4","text":"Оценка прогнозирования P","font_family":"system-ui","font_size":16,"horizontal_align":"left","padding_left":4,"_events":{}},"62":{"top":883,"_id":62,"_type":"Rectangle","width":1002,"border_width":3,"border_color":"#bcbcbc","border_style":"ridge","background_color":"#f4f4f4","text":"Прогноз Q","font_family":"system-ui","font_size":16,"horizontal_align":"left","padding_left":2,"left":5,"_events":{}},"63":{"top":160,"left":5,"_id":63,"_type":"Trend","width":1000,"height":554,"select_archives":false,"set_period":false,"datasource":"tsP","series":[{"name":"FACT_P_L","axis":"y","color":"#505050"},{"name":"PRED_P_L","axis":"y","color":"#ae0e66"}],"border_width":2,"toolbar_visible":"roll up","time_step":"hour","time_factor":1,"fill_graph":true,"_events":{}},"72":{"top":780,"left":5,"_id":72,"_type":"Grid","datasource":"calculationP","config":"{\n  \"columns\": [\n    // {\n    //   \"field\": \"date\",\n    //   \"title\": \"Дата\"\n    // },\n    {\n      \"field\": \"predictMinValue\",\n      \"title\": \"Мин.Прогноз\"\n    },\n    {\n      \"field\": \"predictMaxValue\",\n      \"title\": \"Макс.Прогноз\"\n    },\n    {\n      \"field\": \"factMean\",\n      \"title\": \"Ср.факт.знач.\"\n    },\n    {\n      \"field\": \"predictMean\",\n      \"title\": \"Ср.прогн.знач.\"\n    },\n    {\n      \"field\": \"predictStandDev\",\n      \"title\": \"Станд.откл.\"\n    },\n    {\n      \"field\": \"mse\",\n      \"title\": \"MSE\"\n    },\n    {\n      \"field\": \"rmse\",\n      \"title\": \"RMSE\"\n    },\n    {\n      \"field\": \"mae\",\n      \"title\": \"MAE\"\n    },\n    {\n      \"field\": \"mape\",\n      \"title\": \"MAPE\"\n    },\n    {\n      \"field\": \"accuracy\",\n      \"title\": \"Точность\"\n    }\n  ]\n}","width":1000,"height":90,"_events":{}},"103":{"top":107,"left":5,"_id":103,"_type":"Rectangle","width":1001,"border_width":3,"border_color":"#bcbcbc","border_style":"ridge","background_color":"#f4f4f4","text":"Прогноз P","font_family":"system-ui","font_size":16,"horizontal_align":"left","padding_left":4,"_links":{"text":{"type":"SCRIPT","tags":{"node":[{"source":"config"}]},"script":"function({node},element,context){\n   var node_name;\n   node_name = node.get()._value.name;\n   return 'Прогноз по узлу: ' + node_name;\n}"}},"_events":{}},"108":{"top":385,"left":1030,"_id":108,"_type":"JSONSource","_links":{"value":{"type":"SCRIPT","tags":{"nodes":[{"source":"nodes"}],"point":[{"filter":"point"}]},"script":"function({nodes,point},element,context){\n    \n    let i = point.get();\n    console.log('DEBUG selected point: ' + i);\n    let name = nodes.data().map(({_path})=>_path.replace(\"/root/PROJECT/TAGS/Nodes/\",\"\").replace(\"/model_control\",\"\"))[i];\n    let path = nodes.data()[i]._path\n    \n    console.log('DEBUG selected node: ' + name);\n    console.log('DEBUG selected path: ' + path);\n    \n    if (name === undefined) return undefined;\n    \n    let node = { name, path};\n    \n    return node;\n}"}},"name":"config","value":"{\n    \"0\":{\n        \"point\":\"Agadyr_F/u220\",\n        \"ts\":[\n            {\"archive\":\"/root/PROJECT/TAGS/Nodes/Agadyr_F/u220/archivesS/p_load_sc\",\"name\": \"FACT\",\"aggregate\": \"mean\"},\n            {\"archive\":\"/root/PROJECT/TAGS/Nodes/Agadyr_F/u220/futureP/predict_p_load_sc\",\"name\": \"PRED\",\"aggregate\": \"mean\"}\n        ]\n    },\n    \"1\":{\n        \"point\":\"Shymkent_F/u220\",\n        \"ts\":[\n            {\"archive\":\"/root/PROJECT/TAGS/Nodes/Shymkent_F/u220/archivesS/p_load_sc\",\"name\": \"FACT\",\"aggregate\": \"mean\"},\n            {\"archive\":\"/root/PROJECT/TAGS/Nodes/Shymkent_F/u220/futureP/predict_p_load_sc\",\"name\": \"PRED\",\"aggregate\": \"mean\"}\n        ]\n    }\n    \n    //\n}","_events":{}},"109":{"top":545,"left":1015,"_id":109,"_type":"TS_Datasource","archives":[],"from":"from","to":"to","name":"tsP","step":"hour","step_factor":1,"height":41,"z_index":2,"_links":{"step":{"type":"SCRIPT","tags":{"step":[{"filter":"step"}]},"script":"function(VARS,element,context){\n   // console.log(\"DEBUG: (predict) step is \",VARS.step.get(), typeof VARS.step.get());\n   return VARS.step.get();\n}","map":{"0":"hour","1":"minute"}},"archives":{"type":"SCRIPT","tags":{"node":[{"source":"config"}]},"script":"function({node},element,context){\n    \n    let node_name = node.get()._value.name\n    \n    if ( node_name === undefined ) return undefined;\n    if ( typeof node_name === 'string' ) {\n        let result = [\n                {\"archive\":'/root/PROJECT/TAGS/Nodes/' + node_name + '/archivesP/p_load_sc',\"name\": \"FACT_P_L\",\"aggregate\": \"mean\"},\n                {\"archive\":'/root/PROJECT/TAGS/Nodes/' + node_name + '/futureP/predict_p_load_sc',\"name\": \"PRED_P_L\",\"aggregate\": \"mean\"}\n            ]\n        return result;\n        };\n}\n"},"step_factor":{"type":"SCRIPT","tags":{"stepSize":[{"filter":"stepSize"}]},"script":"function(VARS,element,context){\n   let stepInd = VARS.stepSize.get();\n   let result = VARS.stepSize._value._properties.options[stepInd];\n   //console.log(\"DEBUG: (predict) stepSize is \",result, typeof result);\n   return parseInt(result);\n}"}},"_events":{}},"118":{"top":935,"left":6,"_id":118,"_type":"Trend","width":1000,"height":554,"select_archives":false,"set_period":false,"datasource":"tsQ","series":[{"name":"FACT_Q_L","axis":"y","color":"#505050"},{"name":"PRED_Q_L","axis":"y","color":"#ae0e66"}],"border_width":2,"toolbar_visible":"roll up","time_step":"hour","time_factor":1,"fill_graph":true,"_events":{}},"120":{"top":1492,"left":5,"_id":120,"_type":"Rectangle","width":1001,"border_width":3,"border_color":"#bcbcbc","border_style":"ridge","background_color":"#f4f4f4","text":"Оценка прогнозирования Q","font_family":"system-ui","font_size":16,"horizontal_align":"left","padding_left":4,"_events":{}},"122":{"top":1702,"left":6,"_id":122,"_type":"Trend","width":1000,"height":272,"select_archives":false,"set_period":false,"datasource":"tsT","series":[{"name":"FACT_T","axis":"y","color":"#505050"},{"name":"PRED_T","axis":"y","color":"#ae0e66"}],"border_width":2,"toolbar_visible":"roll up","time_step":"hour","time_factor":1,"title":"Текущий и прогноз - температура в ближайшем городе","fill_graph":true,"_events":{}},"123":{"top":1645,"_id":123,"_type":"Rectangle","width":1002,"border_width":3,"border_color":"#bcbcbc","border_style":"ridge","background_color":"#f4f4f4","text":"Прогноз погоды","font_family":"system-ui","font_size":16,"horizontal_align":"left","padding_left":2,"left":5,"_events":{}},"128":{"top":950,"left":840,"_id":128,"_type":"TS_Datasource","archives":[],"from":"from","to":"to","name":"tsQ","step":"hour","step_factor":1,"height":41,"z_index":2,"_links":{"step":{"type":"SCRIPT","tags":{"step":[{"filter":"step"}]},"script":"function(VARS,element,context){\n   // console.log(\"DEBUG: (predict) step is \",VARS.step.get(), typeof VARS.step.get());\n   return VARS.step.get();\n}","map":{"0":"hour","1":"minute"}},"archives":{"type":"SCRIPT","tags":{"node":[{"source":"config"}]},"script":"function({node},element,context){\n    \n    let node_name = node.get()._value.name\n    if ( typeof node_name != 'string') return;\n    \n    let result = [\n            {\"archive\":`/root/PROJECT/TAGS/Nodes/${node_name}/archivesP/q_load_sc`,\"name\": \"FACT_Q_L\",\"aggregate\": \"mean\"},\n            {\"archive\":`/root/PROJECT/TAGS/Nodes/${node_name}/futureP/predict_q_load_sc`,\"name\": \"PRED_Q_L\",\"aggregate\": \"mean\"}\n        ]\n    \n    return result;\n}\n\n"},"step_factor":{"type":"SCRIPT","tags":{"stepSize":[{"filter":"stepSize"}]},"script":"function(VARS,element,context){\n   let stepInd = VARS.stepSize.get();\n   let result = VARS.stepSize._value._properties.options[stepInd];\n   //console.log(\"DEBUG: (predict) stepSize is \",result, typeof result);\n   return parseInt(result);\n}"}},"_events":{}},"131":{"top":1720,"left":840,"_id":131,"_type":"TS_Datasource","archives":[],"from":"from","to":"to","name":"tsT","step":"hour","step_factor":1,"height":41,"z_index":2,"_links":{"step":{"type":"SCRIPT","tags":{"step":[{"filter":"step"}]},"script":"function(VARS,element,context){\n   // console.log(\"DEBUG: (predict) step is \",VARS.step.get(), typeof VARS.step.get());\n   return VARS.step.get();\n}","map":{"0":"hour","1":"minute"}},"archives":{"type":"SCRIPT","tags":{"node":[{"source":"config"}]},"script":"function({node},element,context){\n    \n    let node_name = node.get()._value.name\n    if ( typeof node_name != 'string' ) return;\n    \n    let result = [\n            {\"archive\":`/root/PROJECT/TAGS/Nodes/${node_name}/archivesP/temperature`,\"name\": \"FACT_T\",\"aggregate\": \"mean\"},\n            {\"archive\":`/root/PROJECT/TAGS/Nodes/${node_name}/futureP/forecast_temperature`,\"name\": \"PRED_T\",\"aggregate\": \"mean\"},\n        ]\n    \n    return result;\n}\n\n"},"step_factor":{"type":"SCRIPT","tags":{"stepSize":[{"filter":"stepSize"}]},"script":"function(VARS,element,context){\n   let stepInd = VARS.stepSize.get();\n   let result = VARS.stepSize._value._properties.options[stepInd];\n   //console.log(\"DEBUG: (predict) stepSize is \",result, typeof result);\n   return parseInt(result);\n}"}},"_events":{}},"136":{"top":1581,"left":823,"_id":136,"_type":"LocalDatasource","_links":{"data":{"type":"SCRIPT","tags":{"DS":[{"source":"tsQ"}]},"script":"function(VARS, element, context) {\r\n    let ds = VARS.DS.data();\r\n    //console.log(\"DEBUG:typeof ds:\",typeof ds);\r\n    //console.log(\"DEBUG:ds:\",ds);\r\n    //console.log(\"DEBUG:ds[0]:\",ds[0]);\r\n    \r\n    let arrayMean = function (arr) {\r\n        return arr.reduce((a, b) => a + b, 0) / arr.length;\r\n    };\r\n    \r\n    // Functions to find MeanSquareError\r\n    let MSE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.pow((v - predict[index]), 2);\r\n            });\r\n        return (valueArray.reduce((a, x) => (a + x), 0)) / valueArray.length;\r\n    };\r\n    \r\n    // Functions to find RootMeanSquareError\r\n    let RMSE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.pow((v - predict[index]), 2);\r\n            });\r\n        return Math.sqrt(valueArray.reduce((acc, value) => (acc + value), 0)) / valueArray.length;\r\n    };\r\n    \r\n    // Functions to find MeanAbsError\r\n    let MAE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.abs(v - predict[index]);\r\n            });\r\n        return ( valueArray.reduce((acc, value) => (acc + value)) / valueArray.length );\r\n    };\r\n\r\n    // Functions to find MeanAbsPersError\r\n    let MAPE = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.abs(v - predict[index])/v;\r\n            });\r\n        return ( valueArray.reduce((acc, value) => (acc + value)) / valueArray.length * 100);\r\n    };      \r\n    \r\n    // Functions to find 100 - MAPE\r\n    let accuracy = function (fact, predict) {\r\n        let valueArray = fact.map(\r\n            function (v, index) {\r\n                return Math.abs(v - predict[index])/v;\r\n            });\r\n        return 100 - Math.abs( (valueArray.reduce((acc, value) => (acc + value)) / valueArray.length) * 100 );\r\n    };\r\n\r\n    // Functions to find std\r\n    let standDev = function (arr) {\r\n        let valueMean = arr.reduce((acc, b) => acc + b, 0) / arr.length;\r\n        return Math.sqrt(arr.reduce((acc, x) => (acc + Math.pow(x - valueMean, 2))) / arr.length);\r\n    };\r\n    \r\n    // Functions to find minV\r\n    let minValue = function (arr) {\r\n        return Math.min.apply(null, arr);\r\n    };\r\n    \r\n    let maxValue = function (arr) {\r\n        return Math.max.apply(null, arr);\r\n    };\r\n    \r\n\r\n\r\n    // Prepare array of parameter with numbers\r\n    let fact = ds.map((value) => {\r\n        //return value.p_load_fact_smooth;\r\n        return Math.round(value.FACT_Q_L);\r\n    });\r\n    let predict = ds.map((value) => {\r\n        //return value.predict_p_load;\r\n        return Math.round(value.PRED_Q_L);\r\n    });\r\n\r\n    let date = ds.map((value) => {\r\n        return value.date;\r\n    });\r\n\r\n    let value = {};\r\n    \r\n    value.predictMinValue = Math.round(minValue(predict));\r\n    value.predictMaxValue = Math.round(maxValue(predict));\r\n    \r\n    value.mse = Math.round(MSE(fact, predict));\r\n    value.rmse = Math.round(RMSE(fact, predict));\r\n    value.mae = Math.round(MAE(fact, predict));\r\n    value.mape = Math.round(MAPE(fact, predict));       // ошибка в процентах    \r\n    value.accuracy = Math.round(accuracy(fact, predict)); //точность в %\r\n\r\n    value.factMean = Math.round(arrayMean(fact));\r\n    value.predictMean = Math.round(arrayMean(predict));\r\n    // value.factStandDev = Math.round(standDev(fact));\r\n    value.predictStandDev = Math.round(standDev(predict));\r\n    //value.date = date[0];\r\n    \r\n    //console.log('DEBUG:calculationP:date ' + parseInt(date));\r\n    //console.log('DEBUG:calculationQ:fact ' + fact);\r\n    //console.log('DEBUG:calculationQ:predict ' + predict);\r\n    //console.log('DEBUG:calculationQ:value.mape ' + value.mape);\r\n    \r\n  return [value];\r\n}"}},"name":"calculationQ","width":85,"height":40,"z_index":2,"_events":{}},"137":{"top":1546,"left":5,"_id":137,"_type":"Grid","datasource":"calculationQ","config":"{\n  \"columns\": [\n    // {\n    //   \"field\": \"date\",\n    //   \"title\": \"Дата\"\n    // },\n    {\n      \"field\": \"predictMinValue\",\n      \"title\": \"Мин.Прогноз\"\n    },\n    {\n      \"field\": \"predictMaxValue\",\n      \"title\": \"Макс.Прогноз\"\n    },\n    {\n      \"field\": \"factMean\",\n      \"title\": \"Ср.факт.знач.\"\n    },\n    {\n      \"field\": \"predictMean\",\n      \"title\": \"Ср.прогн.знач.\"\n    },\n    {\n      \"field\": \"predictStandDev\",\n      \"title\": \"Станд.откл.\"\n    },\n    {\n      \"field\": \"mse\",\n      \"title\": \"MSE\"\n    },\n    {\n      \"field\": \"rmse\",\n      \"title\": \"RMSE\"\n    },\n    {\n      \"field\": \"mae\",\n      \"title\": \"MAE\"\n    },\n    {\n      \"field\": \"mape\",\n      \"title\": \"MAPE\"\n    },\n    {\n      \"field\": \"accuracy\",\n      \"title\": \"Точность\"\n    }\n  ]\n}","width":1000,"height":90,"_events":{}},"138":{"top":265,"left":1035,"_id":138,"_type":"TableDatasource","_links":{"filter":{"type":"SCRIPT","tags":{"node":[{"source":"config"}]},"script":"function({node},element,context){\n    \n    let node_name = node.get()._value.name\n    \n    if ( node === undefined ) return;\n    \n    let path = \"$oid('/root/PROJECT/TAGS/Nodes/\"+ node_name +\"')\";\n    \n    let result = {\n        field: \"_folder\",\n        operator: \"eq\",\n        value: path\n    };\n\n    return result;\n}"}},"name":"tds","source_table":"model_settings","fields":{"title":{"type":"string"},"history_length":{"type":"number","decode":"function(value,fields){\r\treturn value/3600;\r}","encode":"function(value,fields){\r\treturn value*3600;\r}"},"future_length":{"type":"number","decode":"function(value,fields){\r\treturn value/3600;\r    \r}","encode":"function(value,fields){\r\treturn value*3600;\r}"},"granularity":{"type":"number","decode":"function(value,fields){\r\treturn value/3600;\r}","encode":"function(value,fields){\r\treturn value*3600;\r}"},"config":{"type":"string"},"_folder":{"type":"string"}},"filter":"{}","config":"{\n    \"autoSync\":true,\n    // \"kendo\":{\n    //     \"serverPaging\": true,\n    //     \"serverSorting\": true,\n    //     \"serverFiltering\":true\n    // }\n}\n","z_index":1,"_events":{}},"139":{"top":108,"left":1009,"_id":139,"_type":"Grid","datasource":"tds","config":"{\n   \"selectable\": true,\n   \"persistSelection\": true,\n    \"editable\": true,\n    \n  \"columns\": [\n    {\n      \"field\": \"history_length\",\n      \n    },\n    {\n      \"field\": \"future_length\",\n      \n    },\n    {\n      \"field\": \"granularity\",\n      \n    },\n   \n  ]\n}","width":897,"height":94,"data":"[]","_events":{}},"140":{"top":210,"left":1008,"_id":140,"_type":"Grid","datasource":"tds","config":"{\n   \"selectable\": true,\n   \"editable\": true,\n   \"columns\": [\n        {\n          \"field\": \"config\",\n          \"title\": \"Model settings\",\n          \"width\": \"18em\"\n        },\n        // {\n        //             \"name\": \"edit\",\n        //             \"width\": \"2em\",\n        //             \"title\": \"Edit Table\",\n        //             \"command\":[\n        //                 {\n        //                     \"name\": \"edit\",\n        //                     \"iconClass\": \"k-icon k-i-edit\",\n        //                     visible:function(item){ \n        //                         return true\n        //                     }\n        //                 }\n        //             ]\n        //         }\n    \n  ]\n}","width":897,"height":137,"data":"[]","_events":{}},"149":{"top":400,"left":1715,"_id":149,"_type":"Button","width":125,"text":"Test combobox","_events":{"click":{"type":"SCRIPT","value":{"tags":{"point":[{"filter":"point"}]},"script":"function({point},element,context){\r    \r    console.log(\"point.get(): \", point.get());\r// \tconsole.log(\"click\");\r//     const i = point.get();\r//     let node = nodes.data()[i];\r//     console.log(\"node\",node);\r//     if(!node) return;\r    \r//     node=node._path + \"/model_control\";\r//     console.log(\"node1\",node);\r}"}}}},"@filter":{"_id":"@filter","_type":"Filter","height":105,"_items":{"20":{"left":392,"_id":20,"_type":"DateTimePicker","z_index":1,"name":"from","top":7,"width":270,"interval":60,"_links":{"value":{"type":"SCRIPT","tags":{"factor":[{"filter":"factor"}]},"script":"function(VARS,element,context){\n   let factor = parseInt(VARS.factor.get());\n   return +Math.trunc(new Date()/3600000)*3600000 - factor * 24 * 3600 * 1000; //to ms\n}"}},"_events":{"init":{"type":"SCRIPT","value":{"script":"function(VARS,element,context){\r    // let curDate =Math.trunc(new Date()/3600000)*3600000;\r    // let result = ;\r    //console.log(\"DEBUG->from->\",new Date(),curDate, result);\r    element.set({value: +Math.trunc(new Date()/3600000)*3600000 - 2 * 24 * 3600 * 1000});\r    // context.setInterval(()=>{\r    //     element.set({value: +new Date() - 48 * 3600000});\r    // },5000);\r}"}}}},"22":{"left":694,"_id":22,"_type":"DateTimePicker","z_index":1,"name":"to","width":270,"top":7,"interval":60,"_events":{"init":{"type":"SCRIPT","value":{"script":"function(VARS,element,context){\r\telement.set({value: +Math.trunc(new Date()/3600000)*3600000});// + 2 * 24 * 3600 * 1000});\r\r    // function(VARS,element,context){\r//     //VARS.from.get()\r//     //let toDate = +new Date() + 48 * 3600000;\r//     let factor = 1;//parseInt(VARS.factor.get());\r//     return +Math.trunc(new Date()/3600000)*3600000;// + factor * 2 * 24 * 3600 * 1000; //to ms\r// }\r    \r}\r\r\r"}}}},"28":{"left":649,"_id":28,"_type":"Rectangle","width":55,"height":35,"z_index":1,"border_width":0,"transparent":true,"text":"по:","font_family":"system-ui","font_size":16,"top":7,"_events":{}},"68":{"left":1648,"_id":68,"_type":"DateTimePicker","z_index":1,"name":"now1","_links":{"value":{"type":"SCRIPT","tags":{"from":[{"filter":"from"}]},"script":"function(VARS,element,context){\n   let d = new Date();\n   //console.log(d);\n   //return +new Date(VARS.from.get()) + 96 * 3600000;\n   return d;\n}"}},"width":240,"top":11,"_events":{}},"74":{"left":1648,"_id":74,"_type":"DateTimePicker","z_index":1,"name":"now2","_links":{"value":{"type":"SCRIPT","tags":{"from":[{"filter":"from"}]},"script":"function(VARS,element,context){\n   let d = new Date();\n   //console.log(d);\n   //return +new Date(VARS.from.get()) + 96 * 3600000;\n   return d;\n}"}},"width":240,"top":57,"_events":{}},"75":{"_id":75,"_type":"Rectangle","width":55,"height":35,"z_index":1,"border_width":0,"transparent":true,"text":"От:","font_family":"system-ui","font_size":16,"top":7,"left":347,"_events":{}},"78":{"top":65,"left":1355,"_id":78,"_type":"Combobox","width":268,"z_index":1,"name":"point_test_combobox","options":["Kyzylorda_220_F","pu_Almaty_Alma_F","Medeo_220_F","Mirgalimsai_F","Mointy_220_F","pu_CGPP_EGRES-1_F","Nura_F","Nura_F/u220"],"required":true,"value":1,"_links":{"options":{"type":"SCRIPT","tags":{"nodes":[{"source":"nodes"}]},"script":"function({nodes},element,context){\n    return nodes.data().map(({_path})=>_path.replace(\"/root/PROJECT/TAGS/Nodes/\",\"\").replace(\"/model_control\",\"\"));\n}"}},"visible":false,"_events":{}},"81":{"_id":81,"_type":"Rectangle","width":71,"height":35,"z_index":1,"border_width":0,"transparent":true,"text":"Объект:","font_family":"system-ui","font_size":16,"top":7,"left":8,"horizontal_align":"left","padding_left":2,"bold":true,"_events":{}},"104":{"top":7,"left":1092,"_id":104,"_type":"Combobox","width":70,"z_index":1,"name":"step","options":["час","мин"],"_events":{}},"105":{"_id":105,"_type":"Rectangle","width":109,"height":35,"z_index":1,"border_width":0,"transparent":true,"text":"Выбор шага:","font_family":"system-ui","font_size":16,"top":7,"left":985,"horizontal_align":"left","padding_left":2,"title":"Шаг дискретизации данных трендов","_events":{}},"113":{"top":55,"left":348,"_id":113,"_type":"Slider","width":617,"z_index":1,"title":"на сколько дней назад получить архив?","name":"factor","value":3,"min":1,"max":30,"small_step":1,"large_step":5,"_events":{}},"114":{"_id":114,"_type":"Rectangle","width":82,"height":35,"z_index":1,"border_width":0,"transparent":true,"text":"Фактор:","font_family":"system-ui","font_size":16,"top":50,"left":269,"horizontal_align":"left","padding_left":2,"bold":true,"_events":{}},"115":{"top":9,"left":1181,"_id":115,"_type":"Button","width":198,"z_index":1,"text":"Сформировать отчет","bold":true,"_events":{"click":{"type":"SCRIPT","value":{"script":"function(VARS,element,context){\r    // let now=+(new Date());\r    // let from=+(new Date(VARS.from.get()));\r    // if (from>=now){\r    //     return fp_dev.error(fp_dev.text(\"Отчет не может быть сформирован за будущее число.\\r\\nПожалуйста скореектируйте параметры\"))\r    // }\r    console.log(\"Clicked - run_report()\");\r\tcontext.run_report();\r}"}}}},"116":{"top":54,"left":1092,"_id":116,"_type":"Combobox","width":70,"z_index":1,"name":"stepSize","options":["1","10","15","30","60"],"visible":false,"_events":{}},"117":{"_id":117,"_type":"Rectangle","width":109,"height":35,"z_index":1,"border_width":0,"transparent":true,"text":"Выбор шага:","font_family":"system-ui","font_size":16,"top":54,"left":985,"horizontal_align":"left","padding_left":2,"title":"Шаг дискретизации данных трендов","visible":false,"_events":{}},"148":{"top":50,"_id":148,"_type":"TableDatasource","width":85,"height":40,"z_index":1,"name":"nodes","source_table":"model_control","fields":{"_path":{"type":"string"}},"base_filter":"{field:\"_path\",operator:\"contains\",value:\"PROJECT/TAGS/Nodes\"}","_events":{}},"152":{"left":80,"_id":152,"_type":"Combobox","width":268,"z_index":1,"name":"point","options":["Kyzylorda_220_F","pu_Almaty_Alma_F","Medeo_220_F","Mirgalimsai_F","Mointy_220_F","pu_CGPP_EGRES-1_F","Nura_F","Nura_F/u220"],"required":true,"value":1,"_links":{"options":{"type":"SCRIPT","script":"function(VARS,element,context){\n   \n   let options = [\n    \"Agadyr_F/u220\",\n    \"Shymkent_F/u220\",\n    \"ATETS-3_F/u110\",\n    \"Alma_F/u220\",\n    \"Almaty_F/u220\",\n    \"Aspara_220_F\",\n    \"Avrora_F\",\n    \"Balkhashskaya_F/u110\",\n    \"Barabinskaya_F\",\n    \"Barnaul_F\",\n    \"CA-1_F\",\n    \"CGPP_F/u220\",\n    \"Cheliabinsk_F\",\n    \"EEC_F\",\n    \"EEC_F/u220\",\n    \"EGRES-1_F/u20\",\n    \"EGRES-1_F/u220\",\n    \"EGRES-2_F/u20\",\n    \"Frunze_F/u220\",\n    \"Glavnaya_220_F\",\n    \"IrGRES_F\",\n    \"Irtyshskaya_F\",\n    \"Kar.GRES-2_F/u110\",\n    \"Karazhal_220_F\",\n    \"Kemin_220_F\",\n    \"Kentau_F\",\n    \"Kokshetau_F\",\n    \"Kostanai_F\",\n    \"Koyan-Kos_220_F\",\n    \"Kozirevo_F\",\n    \"Kumkol_220_F/u110\",\n    \"Kurgan_F\",\n    \"Kyzylorda_220_F\",\n    \"MagnitRF_F\",\n    \"Medeo_220_F\",\n    \"Mirgalimsai_F\",\n    \"MoinakGES_220_F\",\n    \"Mointy_220_F\",\n    \"Nura_F/u220\",\n    \"Oskarovka-220_F\",\n    \"PS-EGPP_F\",\n    \"PS7-AHBK_F/u110\",\n    \"Robot_F\",\n    \"Ru-6_F\",\n    \"Rubtsovsk_F\",\n    \"Semey_F/u220\",\n    \"Shagol_F\",\n    \"Shilik_220_F\",\n    \"Shu_F/u220\",\n    \"Shymkentskaya_F\",\n    \"Sibir_F\",\n    \"Sistema-Ural_F\",\n    \"Sokol_F\",\n    \"Taldykorgan_F/u220\",\n    \"TashGRES_F\",\n    \"TashGRES_F/u220\",\n    \"Tashkent_F\",\n    \"Tavricheskaya_F\",\n    \"TrGRES_F\",\n    \"UKGRES_F/u220\",\n    \"UjUrGRES_F\",\n    \"Usti-Kamenogorsk_F/u220\",\n    \"VityazRF_F\",\n    \"VoshodRF_F\",\n    \"Zapadnaya_220_F\",\n    \"Zarya_F\",\n    \"ZhGRES_220_F\",\n    \"Zhambyl_F/u220\",\n    \"Zhanakorgan_F\",\n    \"Zhezkazgan_F/u220\",\n    \"Zhylga_220_F\",\n    \"pu_Almaty_Alma_F\",\n    \"pu_CGPP_EGRES-1_F\",\n    \"pu_CGPP_Oskarovka_F\",\n    \"pu_EEC_Semey_F\",\n    \"pu_EGRES-1_EEC_F\",\n    \"pu_EGRES-1_Oskarovka_F\",\n    \"pu_Frunze_Kemin_F\",\n    \"pu_GNPS_F\",\n    \"pu_Glavnaya_Frunze_F\",\n    \"pu_Glavnaya_Kemin_F\",\n    \"pu_KarGRES_Agadyr_F\",\n    \"pu_KarGRES_Balkhashskaya_F\",\n    \"pu_KarGRES_Karazhal_F\",\n    \"pu_KarGRES_Nura_F\",\n    \"pu_KarGRES_Oskarovka_F\",\n    \"pu_Kentau_Zhambyl_220_F\",\n    \"pu_Kyzylorda_Kumkol_F\",\n    \"pu_Mointy_UkGRES_F\",\n    \"pu_Ru-6_Kyzylorda_F\",\n    \"pu_Semey_U-K_F\",\n    \"pu_Shymkent_220_Zhylga_F\",\n    \"pu_Taldykorgan_Robot_F\",\n    \"pu_UkGRES_Shu_F\",\n    \"pu_ZhGRES_Frunze_F\",\n    \"pu_Zhambyl_Shymkent_F\",\n    \"pu_Zhezkazgan_Karazhal_F\"\n\n   ];\n   \n   //console.log(\"DEBUG:point:element: \", element);\n   \n   return options;\n}"}},"_events":{}}},"border_width":2,"border_color":"#bcbcbc","border_style":"ridge","_events":{}}},"_index":{"5":[],"20":["@filter"],"22":["@filter"],"28":["@filter"],"48":[],"59":[],"62":[],"63":[],"68":["@filter"],"72":[],"74":["@filter"],"75":["@filter"],"78":["@filter"],"81":["@filter"],"103":[],"104":["@filter"],"105":["@filter"],"108":[],"109":[],"113":["@filter"],"114":["@filter"],"115":["@filter"],"116":["@filter"],"117":["@filter"],"118":[],"120":[],"122":[],"123":[],"128":[],"131":[],"136":[],"137":[],"138":[],"139":[],"140":[],"148":["@filter"],"149":[],"152":["@filter"],"@filter":[]},"background_color":"#f4f4f4","border_width":2,"border_color":"#bcbcbc","border_style":"ridge","_events":{}}